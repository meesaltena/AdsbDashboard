@implements IDisposable
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
    <MudNavLink Href="counter" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">Counter</MudNavLink>
    <MudNavLink Href="flights" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Radar">Current flights</MudNavLink>
    <MudNavLink Href="recentflights" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Radar">Recent flights</MudNavLink>
    <MudNavLink Href="planes" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Flight">Planes</MudNavLink>
    <MudNavLink Href="auth" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Lock">Auth required</MudNavLink>

    <AuthorizeView>
        <Authorized>
            <MudNavLink itemref="" id="manageAccountLink" Href="Account/Manage" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ManageAccounts">
                Manage account
            </MudNavLink>
            <form action="Account/Logout" method="post" class="mud-nav-item mud-ripple">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                <button type="submit" class="mud-nav-link">
                    <MudIcon Icon="@Icons.Material.Filled.Logout" class="mud-icon-root mud-icon-default mud-svg-icon mud-icon-size-medium mud-nav-link-icon mud-nav-link-icon-default" />
                    <div class="navMenuInsetText">
                        Logout
                    </div>
                </button>
            </form>
        </Authorized>
        <NotAuthorized>
            <MudNavLink Href="Account/Register" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AppRegistration">Register account</MudNavLink>
            <MudNavLink Href="Account/Login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Login">Login</MudNavLink>
        </NotAuthorized>
    </AuthorizeView>
</MudNavMenu>
<script>
    window.getClasses = function (id) {
        var element = document.getElementById(id);
        return element.className;
    }
</script>
@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}